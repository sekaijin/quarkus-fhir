events {}
http {
  server {

    # include       /etc/nginx/mime.types;

    #   listen 443 ssl;

    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_certificate  /etc/letsencrypt/localhost.crt;
    # ssl_certificate_key /etc/letsencrypt/localhost.key;

    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    # add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src http://example.com;";   
    # #add_header X-Content-Type-Options nosniff;    # cannot apply now because of open keycloak issue https://issues.redhat.com/browse/KEYCLOAK-17076
    # add_header X-XSS-Protection: "1; mode=block";

    proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address 
    proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
    proxy_set_header Host $host; # to forward the original host requested by the client

    #server_name terrien.ddns.net;

    #location / {
    #  proxy_pass http://172.20.0.2:8080/;
      # rewrite ^/(.*)$ $1 break;
    #}

    location /maven2 {
      proxy_pass https://repo1.maven.org/maven2/;
      proxy_ssl_verify off;
      proxy_ssl_verify_depth 0;
        proxy_redirect off;
      # rewrite ^/(.*)$ $1 break;
    }



    location / {
          index index.html; #Only a basic helloworld index.html file
          root /usr/share/nginx/html;
        }

        error_page 404 /404.html;
            location = /40x.html {
        }

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
        }

    location /Patient {
      proxy_pass http://okaido:8080;
    }

    location /Appointment {
      proxy_pass http://okaido:8081;
    }

    location /Practitioner {
      proxy_pass http://okaido:8082;
    }

    location /metadata {
      proxy_pass http://okaido:8008;
    }
  }
}
